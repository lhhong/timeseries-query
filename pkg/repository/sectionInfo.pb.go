// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/lhhong/timeseries-query/pkg/repository/sectionInfo.proto

package repository

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SectionInfo struct {
	Groupname            string   `protobuf:"bytes,1,opt,name=Groupname,proto3" json:"Groupname,omitempty"`
	Series               string   `protobuf:"bytes,2,opt,name=Series,proto3" json:"Series,omitempty"`
	Nsmooth              int32    `protobuf:"varint,3,opt,name=Nsmooth,proto3" json:"Nsmooth,omitempty"`
	StartSeq             int64    `protobuf:"varint,4,opt,name=StartSeq,proto3" json:"StartSeq,omitempty"`
	Sign                 int32    `protobuf:"varint,5,opt,name=Sign,proto3" json:"Sign,omitempty"`
	Height               float64  `protobuf:"fixed64,6,opt,name=Height,proto3" json:"Height,omitempty"`
	Width                int64    `protobuf:"varint,7,opt,name=Width,proto3" json:"Width,omitempty"`
	NextSeq              int64    `protobuf:"varint,8,opt,name=NextSeq,proto3" json:"NextSeq,omitempty"`
	PrevSeq              int64    `protobuf:"varint,9,opt,name=PrevSeq,proto3" json:"PrevSeq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SectionInfo) Reset()         { *m = SectionInfo{} }
func (m *SectionInfo) String() string { return proto.CompactTextString(m) }
func (*SectionInfo) ProtoMessage()    {}
func (*SectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09e1d1b3a91afc, []int{0}
}

func (m *SectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SectionInfo.Unmarshal(m, b)
}
func (m *SectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SectionInfo.Marshal(b, m, deterministic)
}
func (m *SectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SectionInfo.Merge(m, src)
}
func (m *SectionInfo) XXX_Size() int {
	return xxx_messageInfo_SectionInfo.Size(m)
}
func (m *SectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SectionInfo proto.InternalMessageInfo

func (m *SectionInfo) GetGroupname() string {
	if m != nil {
		return m.Groupname
	}
	return ""
}

func (m *SectionInfo) GetSeries() string {
	if m != nil {
		return m.Series
	}
	return ""
}

func (m *SectionInfo) GetNsmooth() int32 {
	if m != nil {
		return m.Nsmooth
	}
	return 0
}

func (m *SectionInfo) GetStartSeq() int64 {
	if m != nil {
		return m.StartSeq
	}
	return 0
}

func (m *SectionInfo) GetSign() int32 {
	if m != nil {
		return m.Sign
	}
	return 0
}

func (m *SectionInfo) GetHeight() float64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SectionInfo) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *SectionInfo) GetNextSeq() int64 {
	if m != nil {
		return m.NextSeq
	}
	return 0
}

func (m *SectionInfo) GetPrevSeq() int64 {
	if m != nil {
		return m.PrevSeq
	}
	return 0
}

func init() {
	proto.RegisterType((*SectionInfo)(nil), "repository.SectionInfo")
}

func init() {
	proto.RegisterFile("github.com/lhhong/timeseries-query/pkg/repository/sectionInfo.proto", fileDescriptor_9a09e1d1b3a91afc)
}

var fileDescriptor_9a09e1d1b3a91afc = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x65, 0xda, 0xa4, 0x8d, 0xd9, 0x2c, 0x84, 0x2c, 0xc4, 0x10, 0x31, 0x65, 0xa1, 0x16,
	0xea, 0x1b, 0xc0, 0x00, 0x2c, 0x08, 0xc5, 0x03, 0x12, 0x5b, 0x5b, 0x0e, 0xdb, 0x82, 0xf8, 0x52,
	0xfb, 0x82, 0xe8, 0x53, 0xf3, 0x0a, 0x28, 0x6e, 0x42, 0x66, 0x36, 0x7f, 0xf7, 0xf9, 0xee, 0x97,
	0x7e, 0x7e, 0x67, 0x1c, 0xd9, 0x6e, 0xbb, 0xda, 0x61, 0xa3, 0x3e, 0xad, 0x45, 0x6f, 0x14, 0xb9,
	0x06, 0x22, 0x04, 0x07, 0xf1, 0x7a, 0xdf, 0x41, 0x38, 0xa8, 0xf6, 0xc3, 0xa8, 0x00, 0x2d, 0x46,
	0x47, 0x18, 0x0e, 0x2a, 0xc2, 0x8e, 0x1c, 0xfa, 0x47, 0xff, 0x8e, 0xab, 0x36, 0x20, 0xa1, 0xe0,
	0x93, 0xbd, 0xfa, 0x61, 0xfc, 0x54, 0x4f, 0x3f, 0xc4, 0x25, 0x2f, 0xee, 0x03, 0x76, 0xad, 0xdf,
	0x34, 0x20, 0x59, 0xc9, 0xaa, 0xa2, 0x9e, 0x06, 0xe2, 0x9c, 0xe7, 0x3a, 0x45, 0xc9, 0x93, 0xa4,
	0x06, 0x12, 0x92, 0x2f, 0x9e, 0x62, 0x83, 0x48, 0x56, 0xce, 0x4a, 0x56, 0x65, 0xf5, 0x88, 0xe2,
	0x82, 0x2f, 0x35, 0x6d, 0x02, 0x69, 0xd8, 0xcb, 0x79, 0xc9, 0xaa, 0x59, 0xfd, 0xc7, 0x42, 0xf0,
	0xb9, 0x76, 0xc6, 0xcb, 0x2c, 0xad, 0xa4, 0x77, 0x9f, 0xf0, 0x00, 0xce, 0x58, 0x92, 0x79, 0xc9,
	0x2a, 0x56, 0x0f, 0x24, 0xce, 0x78, 0xf6, 0xe2, 0xde, 0xc8, 0xca, 0x45, 0x3a, 0x72, 0x84, 0x94,
	0x0b, 0xdf, 0xe9, 0xf8, 0x32, 0xcd, 0x47, 0xec, 0xcd, 0x73, 0x80, 0xaf, 0xde, 0x14, 0x47, 0x33,
	0xe0, 0xed, 0xfa, 0xf5, 0xe6, 0xdf, 0x25, 0x6e, 0xf3, 0xd4, 0xdc, 0xfa, 0x37, 0x00, 0x00, 0xff,
	0xff, 0x73, 0x07, 0x46, 0xc9, 0x80, 0x01, 0x00, 0x00,
}

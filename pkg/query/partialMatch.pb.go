// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/query/partialMatch.proto

package query

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	repository "github.com/lhhong/timeseries-query/pkg/repository"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PartialMatch struct {
	FirstSection         *repository.SectionInfo `protobuf:"bytes,1,opt,name=FirstSection,proto3" json:"FirstSection,omitempty"`
	LastSection          *repository.SectionInfo `protobuf:"bytes,2,opt,name=LastSection,proto3" json:"LastSection,omitempty"`
	PrevWidth            int64                   `protobuf:"varint,3,opt,name=PrevWidth,proto3" json:"PrevWidth,omitempty"`
	PrevHeight           float64                 `protobuf:"fixed64,4,opt,name=PrevHeight,proto3" json:"PrevHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PartialMatch) Reset()         { *m = PartialMatch{} }
func (m *PartialMatch) String() string { return proto.CompactTextString(m) }
func (*PartialMatch) ProtoMessage()    {}
func (*PartialMatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_245a99d74f5572a3, []int{0}
}

func (m *PartialMatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartialMatch.Unmarshal(m, b)
}
func (m *PartialMatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartialMatch.Marshal(b, m, deterministic)
}
func (m *PartialMatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartialMatch.Merge(m, src)
}
func (m *PartialMatch) XXX_Size() int {
	return xxx_messageInfo_PartialMatch.Size(m)
}
func (m *PartialMatch) XXX_DiscardUnknown() {
	xxx_messageInfo_PartialMatch.DiscardUnknown(m)
}

var xxx_messageInfo_PartialMatch proto.InternalMessageInfo

func (m *PartialMatch) GetFirstSection() *repository.SectionInfo {
	if m != nil {
		return m.FirstSection
	}
	return nil
}

func (m *PartialMatch) GetLastSection() *repository.SectionInfo {
	if m != nil {
		return m.LastSection
	}
	return nil
}

func (m *PartialMatch) GetPrevWidth() int64 {
	if m != nil {
		return m.PrevWidth
	}
	return 0
}

func (m *PartialMatch) GetPrevHeight() float64 {
	if m != nil {
		return m.PrevHeight
	}
	return 0
}

func init() {
	proto.RegisterType((*PartialMatch)(nil), "query.PartialMatch")
}

func init() { proto.RegisterFile("pkg/query/partialMatch.proto", fileDescriptor_245a99d74f5572a3) }

var fileDescriptor_245a99d74f5572a3 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0xc8, 0x4e, 0xd7,
	0x2f, 0x2c, 0x4d, 0x2d, 0xaa, 0xd4, 0x2f, 0x48, 0x2c, 0x2a, 0xc9, 0x4c, 0xcc, 0xf1, 0x4d, 0x2c,
	0x49, 0xce, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0xcb, 0x48, 0x29, 0x80, 0x14,
	0x15, 0xa5, 0x16, 0xe4, 0x17, 0x67, 0x96, 0xe4, 0x17, 0x55, 0xea, 0x17, 0xa7, 0x26, 0x97, 0x64,
	0xe6, 0xe7, 0x79, 0xe6, 0xa5, 0xe5, 0x43, 0x14, 0x2a, 0x1d, 0x61, 0xe4, 0xe2, 0x09, 0x40, 0xd2,
	0x2f, 0x64, 0xcd, 0xc5, 0xe3, 0x96, 0x59, 0x54, 0x5c, 0x12, 0x0c, 0x51, 0x2a, 0xc1, 0xa8, 0xc0,
	0xa8, 0xc1, 0x6d, 0x24, 0xae, 0x87, 0x30, 0x45, 0x2f, 0x18, 0x61, 0x4a, 0x10, 0x8a, 0x62, 0x21,
	0x4b, 0x2e, 0x6e, 0x9f, 0x44, 0x84, 0x5e, 0x26, 0xfc, 0x7a, 0x91, 0xd5, 0x0a, 0xc9, 0x70, 0x71,
	0x06, 0x14, 0xa5, 0x96, 0x85, 0x67, 0xa6, 0x94, 0x64, 0x48, 0x30, 0x2b, 0x30, 0x6a, 0x30, 0x07,
	0x21, 0x04, 0x84, 0xe4, 0xb8, 0xb8, 0x40, 0x1c, 0x8f, 0xd4, 0xcc, 0xf4, 0x8c, 0x12, 0x09, 0x16,
	0x05, 0x46, 0x0d, 0xc6, 0x20, 0x24, 0x91, 0x24, 0x36, 0xb0, 0x6f, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x00, 0x16, 0xe1, 0x36, 0x16, 0x01, 0x00, 0x00,
}
